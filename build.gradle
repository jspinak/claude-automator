plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.claude'
version = '1.0.0'
sourceCompatibility = '21'

repositories {
    mavenCentral()
}

dependencies {
    // Brobot library - includes Spring, Lombok, SLF4J as transitive dependencies
    implementation 'io.github.jspinak:brobot'
    
    // Jakarta annotations for @PostConstruct
    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
    
    // Jackson for proper serialization (if needed beyond what Brobot provides)
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    
    // AspectJ for mock interceptors
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    
    // Lombok for compile-time annotations and annotation processing
    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'
    
    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
    
    // Show test output in console
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
        showStandardStreams = true
        exceptionFormat = 'full'
    }
}

// Images are loaded directly from the images directory by Brobot/Sikuli
// No need to copy them to build resources

// Specify the main class to avoid ambiguity
springBoot {
    mainClass = 'com.claude.automator.ClaudeAutomatorApplication'
}

// Task for running diagnostic tools
task runDiagnostic(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'io.github.jspinak.brobot.tools.diagnostics.QuickMatchComparison'
    if (project.hasProperty('args')) {
        args project.args.split(' ')
    } else {
        args 'images/prompt/claude-prompt-3.png'
    }
}

// Task for running simple diagnostic
task runSimpleDiagnostic(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.claude.automator.SimpleDiagnostic'
}

// Task to print classpath for external tools
task printClasspath {
    doLast {
        println sourceSets.main.runtimeClasspath.asPath
    }
}